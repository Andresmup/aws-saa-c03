#!/usr/bin/env bash

# Exit immediately if any command returns an error
set -e

#Create a VPC
VPC_ID=$(aws ec2 create-vpc \
--region us-east-1 \
--cidr-block 10.0.0.0/16 \
--tag-specification 'ResourceType=vpc,Tags=[{Key=Name,Value=cli-vpc}]' | jq -r '.Vpc.VpcId')

echo $VPC_ID

#Turn on DNS hostnames
aws ec2 modify-vpc-attribute --vpc-id $VPC_ID --enable-dns-hostnames "{\"Value\":true}"

#Create internet gateway
IGW_ID=$(aws ec2 create-internet-gateway \
--tag-specifications 'ResourceType=internet-gateway,Tags=[{Key=Name,Value=my-igw}]' | jq -r '.InternetGateway.InternetGatewayId')
echo $IGW_ID

#Attach internet gateway
aws ec2 attach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID

#Create a subnet
SUBNET_1A_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block 10.0.0.0/20 \
--availability-zone us-east-1a \
--tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=my-ipv4-only-subnet}]' | jq -r '.Subnet.SubnetId')
echo $SUBNET_1A_ID

#Auto-assign IPv4 to subnet
aws ec2 modify-subnet-attribute --subnet-id $SUBNET_1A_ID --map-public-ip-on-launch

#Get route table
RT_ID=$(aws ec2 describe-route-tables --filters "Name=vpc-id,Values=$VPC_ID" --query "RouteTables[].RouteTableId[]" --output text)
echo $RT_ID

#Associate subnet
aws ec2 associate-route-table --route-table-id $RT_ID --subnet-id $SUBNET_1A_ID

#Add route for the RT to the IGW
aws ec2 create-route --route-table-id $RT_ID --destination-cidr-block 0.0.0.0/0 --gateway-id $IGW_ID